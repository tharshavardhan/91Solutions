{"version":3,"sources":["redux/actions/index.js","Components/LogoutButton.js","Components/ButtonLink.js","Components/Dashboard.js","PrivateRoute.js","Components/LoginPage.js","Components/RoleBaseAuthorization.js","Container/HomePageContainer.js","Components/Missions.js","Components/Rockets.js","Components/History.js","Components/HomePage.js","App.js","serviceWorker.js","redux/reducers/index.js","redux/RootReducer.js","Store.js","index.js"],"names":["login","name","console","time","dispatch","fetch","then","response","json","timeEnd","type","LogoutButton","useDispatch","Button","color","onClick","ButtonLink","to","component","Link","Dashboard","useEffect","document","title","Box","display","justifyContent","p","bgcolor","fontSize","PrivateRoute","Component","rest","token","useSelector","state","userDetails","useAuthenticate","render","props","useStyles","makeStyles","theme","main","height","alignItems","Loginpage","classes","React","useState","password","showPassword","value","setValue","loginButton","e","a","preventDefault","alert","handleChange","prop","event","target","history","push","className","Grid","container","justify","item","xs","lg","md","sm","boxShadow","TextField","onChange","fullWidth","id","label","autoComplete","margin","variant","InputProps","textField","endAdornment","InputAdornment","position","loginCardTextbox","IconButton","edge","aria-label","pt","RoleBaseAuthorization","UserComponent","Role","componentName","some","t","role","includes","HomePageContainer","children","path","loading","data","error","values","setValues","res","catch","Missions","memo","map","d","index","key","m","textAlign","Typography","mission_name","mission_id","website","description","Rockets","rocket_name","company","country","History","event_date_unix","event_date_utc","flight_number","root","backgroundColor","palette","background","paper","HomePage","useTheme","Tabs","newValue","indicatorColor","textColor","centered","Tab","axis","direction","onChangeIndex","Error","App","exact","Boolean","window","location","hostname","match","initalState","rootReducer","combineReducers","action","persistConfig","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fa422128.chunk.js","sourcesContent":["export function login(name) {\n    console.time(1)\n    return dispatch => {\n        fetch('https://run.mocky.io/v3/0d249d2f-7bf4-4f30-aea1-c7eb9c16a880')\n            .then(response => response.json())\n            .then(()=>console.timeEnd(1))\n            .then(json => dispatch({\n                type: name,\n\n            }))\n    }\n}\n\n\nexport function logout(dispatch) {\n   \n    return ({\n        type: \"logout\",\n    })\n\n}","import React from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { Button } from '@material-ui/core';\nimport {logout} from '../redux/actions';\nexport default function LogoutButton() {\n    const dispatch = useDispatch()\n\n    return (\n        <Button color=\"secondary\" onClick={() => dispatch(logout(\"logout\"))}>\n            Logout\n        </Button>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nexport default function ButtonLink({to}) {\n    return (\n            <Button component={Link} to={to}>\n                Navigate to {to}\n            </Button>\n        \n    )\n}\n","import React, { useEffect } from 'react'\nimport LogoutButton from './LogoutButton';\nimport ButtonLink from './ButtonLink';\nimport Box from '@material-ui/core/Box'\nexport default function Dashboard() {\n    useEffect(() => {\n        document.title = 'Dashboard'\n    }, [])\n    return (\n        <Box display=\"flex\" justifyContent=\"space-around\" p={3} bgcolor=\"text.hint\">\n            <Box fontSize={30}>\n                Dashboard\n                    </Box>\n\n            <ButtonLink to=\"homePage\" />\n            <LogoutButton />\n\n        </Box>\n    )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useSelector } from \"react-redux\";\n\nconst useAuthenticate = () => {\n\n  const { userDetails } = useSelector(state => state.userDetails)\n\n  if (userDetails.token) {\n    return true;\n  }\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  let token = useAuthenticate()\n  return (\n    <Route {...rest} render={(props) => (\n      token\n        ? <Component {...props} />\n        : <Redirect to='/login' />\n    )} />\n  )\n}\n\n\nexport default PrivateRoute","import React, { useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport {login} from '../redux/actions';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        display: \"flex\",\n        height: \"70vh\",\n        alignItems: 'center',\n        justifyContent: 'center',\n\n    }\n}));\n\nfunction Loginpage(props) {\n\n    const {userDetails} = useSelector(state => state.userDetails)\n\n\n    \n    const dispatch = useDispatch()\n    const classes = useStyles()\n    const [value, setValue] = React.useState({\n        name: '',\n        password: '',\n        showPassword: false,\n    });\n\n    const loginButton = async (e) => {\n        e.preventDefault();\n        const {name,password} = value;\n        name !== '' && password !== '' ? dispatch(login(name)) : alert(\"Please fill both name and password\")\n        \n    }\n\n    const handleChange = prop => event => {\n        setValue({ ...value, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValue({ ...value, showPassword: !value.showPassword });\n    };\n\n    useEffect(()=>{\n        document.title = \"LoginPage\"\n        userDetails.token && \n         props.history.push(\"/HomePage\");\n\n   \n    },[userDetails,props.history])\n\n\n    return (\n        <Box className={classes.main} >\n            <Grid container\n                justify=\"center\"\n                alignItems=\"center\">\n                <Grid item xs={10} lg={4} md={5} sm={8}>\n                    <Box p={3} boxShadow={3}>\n\n                        <form>\n\n                            <Box fontSize=\"20px\" >\n                                Enter your Username and Password\n                        </Box>\n\n                            <Grid item xs={12}>\n\n                                <TextField\n                                    value={value.name}\n                                    onChange={handleChange('name')}\n                                    fullWidth\n                                    id=\"outlined-email-input\"\n                                    label=\"Username\"\n                                    type=\"Username\"\n                                    name=\"Username\"\n                                    autoComplete=\"Username\"\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                    InputProps={{\n                                        className: classes.textField,\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <p\n                                                >\n                                                    <AccountCircleIcon>\n                                                    </AccountCircleIcon>\n                                                </p>\n                                            </InputAdornment>\n                                        ),\n                                    }}\n                                />\n\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <div className={classes.loginCardTextbox}>\n                                    <TextField\n\n\n                                        id=\"outlined-adornment-password\"\n                                        fullWidth\n                                        variant=\"outlined\"\n                                        // className={classes.textField}\n                                        type={value.showPassword ? 'text' : 'password'}\n                                        label=\"Password\"\n                                        value={value.password}\n                                        onChange={handleChange('password')}\n                                        InputProps={{\n                                            className: classes.textField,\n                                            endAdornment: (\n                                                <InputAdornment position=\"end\">\n                                                    <IconButton\n                                                        edge=\"end\"\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={handleClickShowPassword}\n\n                                                    >\n                                                        {value.showPassword ? <VisibilityOff /> : <Visibility />}\n                                                    </IconButton>\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n\n                                <Box pt={3}>\n\n                                    <Button color=\"primary\" variant=\"contained\" onClick={loginButton} fullWidth>\n                                        Login\n\n                                </Button>\n                                </Box>\n\n                            </Grid>\n\n                        </form>\n\n                    </Box>\n                </Grid>\n\n            </Grid>\n        </Box>\n    )\n}\nexport default (Loginpage)\n\n\n\n\n\n","\nimport React from 'react'\n\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport ButtonLink from './ButtonLink';\n\n\nconst RoleBaseAuthorization = (UserComponent, Role, componentName) => {\n\n    const WithAuthorization = () => {\n        const { userDetails } = useSelector(state => state.userDetails)\n\n        let hasRole = Role.some((t) => userDetails.role && userDetails.role.includes(t))\n        if (hasRole) \n            return <UserComponent />\n        if(userDetails.role)\n            return <>This user don't have access to this {componentName} component \n        \n                <ButtonLink to=\"homePage\"/>\n            </>\n        return <Redirect to=\"/\" />\n    }\n    return WithAuthorization\n\n\n}\n\n\n\n\nexport default RoleBaseAuthorization","import  {useEffect,useState} from 'react'\n\n const  HomePageContainer = ({children,path}) => {\n    const [values,setValues] = useState({\n        loading : true,\n        data : [],\n        error: false\n    })\n\n    useEffect(() => {\n     fetch(`https://api.spacexdata.com/v3/${path}`).then((res)=>res.json())\n     .then((res)=>setValues({\n         loading:false,\n         error:false,\n         data:res\n     }))\n     .catch((e)=>setValues({\n        loading:false,\n        error:true,\n        data:[]\n     }))\n    \n    }, [path])\n\n    return children({\n        ...values\n    })\n}\n\n\nexport default HomePageContainer","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\n\nconst  Mission = ({ data }) => {\n\n    return (\n        <>\n            {data.map((d, index) => <Box key={index} boxShadow={2} m={2} p={2} textAlign=\"left\">\n                <Typography variant=\"h6\" >\n                    Mission name : {d.mission_name}\n                </Typography>\n                <Typography>\n                    Mission Id: {d.mission_id}\n                    <br></br>\n                    website: {d.website}\n                    <br></br>\n\n                    description: {d.description}\n\n                </Typography>\n            </Box>)}\n        </>\n    )\n}\n\nconst Missions = React.memo(Mission)\n\nexport default Missions\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\n\nconst  Rocket = ({ data }) => {\n\n    return (\n        <>\n            {data.map((d, index) => <Box key={index} boxShadow={2} m={2} p={2} textAlign=\"left\">\n                <Typography variant=\"h6\" >\n                    Rocket name : {d.rocket_name}\n                </Typography>\n                <Typography>\n                    company: {d.company}\n                    <br></br>\n                    country: {d.country}\n                    <br></br>\n\n                    description: {d.description}\n\n                </Typography>\n            </Box>)}\n          \n        </>\n    )\n}\n\nconst Rockets = React.memo(Rocket)\n\nexport default Rockets\n","import React from 'react'\nimport { Box, Typography } from '@material-ui/core'\n\nconst HistoryFun = ({ data }) => {\n\n    return (\n        <>\n            {data.map((d, index) => <Box key={index} boxShadow={2} m={2} p={2} textAlign=\"left\">\n                <Typography variant=\"h6\" >\n                    Title : {d.title}\n                </Typography>\n                <Typography>\n                Event date unix: {d.event_date_unix}\n                 <br></br>\n                    Event date utc: {d.event_date_utc}\n                 <br></br>\n                    \n                    Flight number: {d.flight_number}\n                  \n                </Typography>\n            </Box>)}\n        </>\n    )\n}\nconst History = React.memo(HistoryFun)\n\nexport default History\n","import React, { useEffect } from 'react'\nimport LogoutButton from './LogoutButton';\nimport ButtonLink from './ButtonLink';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport HomePageContainer from '../Container/HomePageContainer';\nimport Missions from './Missions';\nimport Rockets from './Rockets';\nimport History from './History'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n\n    },\n}));\n\nexport default function HomePage() {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n    useEffect(() => {\n        document.title = 'HomePage'\n    }, [])\n    return (\n        <div>\n            <Box display=\"flex\" justifyContent=\"space-around\" p={3} bgcolor=\"text.hint\">\n\n                <Box fontSize={30}>\n                HomePage\n                    </Box> \n            <LogoutButton />\n\n                <ButtonLink to=\"dashboard\" />\n            </Box >\n            <div className={classes.root}>\n\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    <Tab label=\"MISSIONS\" />\n                    <Tab label=\"ROCKETS\" />\n                    <Tab label=\"HISTORY\" />\n                </Tabs>\n                <SwipeableViews\n                    axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                    index={value}\n                    onChangeIndex={handleChangeIndex}\n                \n                >\n                    <Box   >\n                        <HomePageContainer\n                            path='missions'\n                        >\n                            {({ loading, data, error }) => {\n                                if (loading) return \"loading ...\"\n                                if (error) throw new Error('I crashed!');\n\n                                return <Missions\n                                    data={data}\n                                />\n                            }}\n                        </HomePageContainer>\n                    </Box>\n                    <Box   >\n                        <HomePageContainer\n                            path='rockets'\n                        >\n                            {({ loading, data, error }) => {\n                                if (loading) return \"loading ...\"\n                                if (error) throw new Error('I crashed!');\n                                return <Rockets\n                                    data={data}\n                                />\n                            }}\n                        </HomePageContainer>\n                    </Box>\n                    <Box >\n                        <HomePageContainer\n                            path='history'\n                        >\n                            {({ loading, data, error }) => {\n                                if (loading) return \"loading ...\"\n                                if (error) throw new Error('I crashed!');\n                                return <History\n                                    data={data}\n                                />\n                            }}\n                        </HomePageContainer>\n                    </Box>\n                </SwipeableViews>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\n\nimport Dashboard from './Components/Dashboard';\nimport PrivateRoute from './PrivateRoute';\nimport Loginpage from './Components/LoginPage';\nimport RoleBaseAuthorization from './Components/RoleBaseAuthorization'\nimport HomePage from './Components/HomePage'\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={() => <Redirect to=\"login\" />} />\n            <PrivateRoute path='/HomePage'\n              component={RoleBaseAuthorization(HomePage,\n                ['admin', 'read'], \"HomePage\")}\n            />\n            <PrivateRoute path=\"/dashboard\"\n              component={RoleBaseAuthorization(Dashboard,\n                ['admin'], \"DashBoard\")} />\n            <Route path=\"/login\" component={Loginpage} />\n\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initalState = {\n    userDetails: {}\n}\n\n\nexport default function games(state = initalState, action) {\n    switch (action.type) {\n        case \"admin\":\n            return {\n                ...state,\n                userDetails: {\n                    name: 'Admin',\n                    role: ['admin', 'read', 'write'],\n                    token: 'adscvnslnflsdnflnsdlnfsd'\n                }\n            }\n        case \"user\":\n            return {\n                ...state,\n                userDetails: {\n                    name: 'user',\n                    role: ['read'],\n                    token: 'adscvnslnflsdnflnsdlnfsd'\n                }\n            }\n        case \"logout\":\n            return {\n                userDetails : {}\n            }\n        default:\n            return state\n\n    }\n}","import { combineReducers } from 'redux'\nimport user from './reducers'\n\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nconst rootReducer = combineReducers({\n    userDetails: user\n})\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport default persistedReducer","import { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware } from 'redux'\nimport  persistedReducer from './redux/RootReducer'\nimport { persistStore } from 'redux-persist'\n\nconst store = createStore(persistedReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nconst persistor = persistStore(store)\n\n\nexport {store , persistor}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store, persistor} from './Store'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}